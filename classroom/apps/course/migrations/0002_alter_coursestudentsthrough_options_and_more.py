# Generated by Django 5.2.6 on 2025-09-30 13:54

import apps.course.fields
import apps.utils
import django.core.validators
import django.db.models.deletion
import functools
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('course', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='coursestudentsthrough',
            options={'verbose_name': 'Course Student', 'verbose_name_plural': 'Course Students'},
        ),
        migrations.AlterModelOptions(
            name='courseteachersthrough',
            options={'verbose_name': 'Course Teacher', 'verbose_name_plural': 'Course Teachers'},
        ),
        migrations.RemoveField(
            model_name='courses',
            name='room',
        ),
        migrations.AddField(
            model_name='courses',
            name='room_number',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='room'),
        ),
        migrations.AlterField(
            model_name='courses',
            name='description',
            field=models.TextField(blank=True, null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='courses',
            name='id',
            field=apps.course.fields.SymbolIdField(max_length=16, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(16), django.core.validators.MinLengthValidator(16)], verbose_name='symbol id'),
        ),
        migrations.AlterField(
            model_name='courses',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to=functools.partial(apps.utils.file_upload_path, *('course',), **{'directory': 'courses'}), verbose_name='course image'),
        ),
        migrations.AlterField(
            model_name='courses',
            name='inv_code',
            field=models.CharField(blank=True, max_length=8, null=True, verbose_name='invite code'),
        ),
        migrations.AlterField(
            model_name='courses',
            name='section',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='section'),
        ),
        migrations.AlterField(
            model_name='courses',
            name='theme',
            field=models.CharField(blank=True, max_length=25, null=True, verbose_name='theme'),
        ),
        migrations.AlterField(
            model_name='coursestudentsthrough',
            name='accepted_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='accepted at'),
        ),
        migrations.AlterField(
            model_name='coursestudentsthrough',
            name='invited_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='invited at'),
        ),
        migrations.AlterField(
            model_name='courseteachersthrough',
            name='teacher',
            field=models.ForeignKey(limit_choices_to={'role_id': 1}, on_delete=django.db.models.deletion.CASCADE, related_name='teacher_course_invites', to=settings.AUTH_USER_MODEL, verbose_name='teacher'),
        ),
        migrations.CreateModel(
            name='Answers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='score')),
                ('submitted_at', models.DateTimeField(blank=True, null=True, verbose_name='submitted at')),
                ('graded_at', models.DateTimeField(blank=True, null=True, verbose_name='graded at')),
                ('attempts', models.PositiveSmallIntegerField(default=0, verbose_name='attempts')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('submitted', 'Submitted'), ('graded', 'Graded'), ('returned', 'Returned')], default='not_started', max_length=20, verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('student', models.ForeignKey(limit_choices_to={'role_id': 0}, on_delete=django.db.models.deletion.CASCADE, related_name='student_answers', to=settings.AUTH_USER_MODEL, verbose_name='student')),
            ],
            options={
                'verbose_name': 'Student Answer',
                'verbose_name_plural': 'Student Answers',
            },
        ),
        migrations.CreateModel(
            name='AnswerOptionsThrough',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True, verbose_name='answer text')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.answers', verbose_name='answer')),
            ],
            options={
                'verbose_name': 'Student Answer Option',
                'verbose_name_plural': 'Student Answer Options',
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='content')),
                ('subject_id', models.IntegerField(verbose_name='subject id')),
                ('subject_type', models.CharField(choices=[('course_post', 'Course Post'), ('student_answer', 'Student Answer')], max_length=20, verbose_name='subject type')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='write_comments', to=settings.AUTH_USER_MODEL, verbose_name='author')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
            },
        ),
        migrations.CreateModel(
            name='CoursePostThrough',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_connections', to='course.courses', verbose_name='course')),
            ],
            options={
                'verbose_name': 'Course Post Connection',
                'verbose_name_plural': 'Course Post Connections',
            },
        ),
        migrations.AddField(
            model_name='answers',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.coursepostthrough', verbose_name='task'),
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('id', apps.course.fields.SymbolIdField(max_length=16, primary_key=True, serialize=False, validators=[django.core.validators.MinLengthValidator(16), django.core.validators.MinLengthValidator(16)], verbose_name='symbol id')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('post_type', models.CharField(choices=[('material', 'Material'), ('exercise', 'Exercise'), ('question', 'Question'), ('student_post', 'Student Post'), ('quiz', 'Quiz')], max_length=20, verbose_name='post type')),
                ('is_published', models.BooleanField(default=False, verbose_name='is published')),
                ('max_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='max score')),
                ('deadline', models.DateTimeField(blank=True, null=True, verbose_name='deadline')),
                ('question_type', models.CharField(blank=True, choices=[('text', 'Text'), ('one_choice', 'One Choice'), ('multi_choice', 'Multi Choice')], max_length=20, null=True, verbose_name='question type')),
                ('can_change', models.BooleanField(default=False, verbose_name='can change')),
                ('can_comment', models.BooleanField(default=False, verbose_name='can comment')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='author')),
                ('courses', models.ManyToManyField(related_name='posts', through='course.CoursePostThrough', to='course.courses')),
            ],
        ),
        migrations.AddField(
            model_name='coursepostthrough',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_connections', to='course.posts', verbose_name='post'),
        ),
        migrations.CreateModel(
            name='QuestionOptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='title')),
                ('is_right', models.BooleanField(blank=True, null=True, verbose_name='is right')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_options', to='course.posts', verbose_name='post')),
            ],
            options={
                'verbose_name': 'Question Option',
                'verbose_name_plural': 'Question Options',
            },
        ),
        migrations.AddField(
            model_name='answers',
            name='option_selections',
            field=models.ManyToManyField(related_name='answer_selections', through='course.AnswerOptionsThrough', to='course.questionoptions'),
        ),
        migrations.AddField(
            model_name='answeroptionsthrough',
            name='option',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='selected_by', to='course.questionoptions', verbose_name='option'),
        ),
        migrations.CreateModel(
            name='Themes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.courses', verbose_name='course')),
            ],
            options={
                'verbose_name': 'Theme',
                'verbose_name_plural': 'Themes',
                'unique_together': {('name', 'course_id')},
            },
        ),
        migrations.AddField(
            model_name='posts',
            name='theme',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='course.themes', verbose_name='theme'),
        ),
        migrations.CreateModel(
            name='AttachData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.TextField(max_length=250, verbose_name='link')),
                ('attachment_type', models.CharField(choices=[('file', 'File'), ('image', 'Image'), ('video', 'Video'), ('link', 'Link')], max_length=20, verbose_name='attachment type')),
                ('subject_id', models.IntegerField(verbose_name='subject id')),
                ('subject_type', models.CharField(choices=[('course_post', 'Course Post'), ('student_answer', 'Student Answer')], max_length=20, verbose_name='subject type')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('loader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='load_data', to=settings.AUTH_USER_MODEL, verbose_name='loader')),
            ],
            options={
                'verbose_name': 'Attachment',
                'verbose_name_plural': 'Attachments',
                'unique_together': {('link', 'subject_id')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='answers',
            unique_together={('student', 'task')},
        ),
        migrations.AlterUniqueTogether(
            name='answeroptionsthrough',
            unique_together={('answer', 'option')},
        ),
    ]
